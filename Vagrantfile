# Define the virtual environment
#
# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'
require 'fileutils'

Vagrant.configure("2") do |config|

  # Load the node definitions YAML file
  nodes = YAML.load_file('nodes.yml')

  # Delete the generated files if present
  FileUtils.rm_f('common_files/hosts.system')
  FileUtils.rm_f('mgmt_files/hosts.ansible')

  # Put the header messages to the newly created hosts files
  headerMessage = '# [' + Time.now.strftime("%Y-%m-%d %H:%M:%S").to_s + '] Generated by Envy (https://github.com/notty-daemon/envy)'
  open('common_files/hosts.system', 'a') { |f| f.puts headerMessage }
  open('mgmt_files/hosts.ansible', 'a') { |f| f.puts headerMessage }

  groups = Hash.new()
  orphanNodes = Array.new()

  # Iterate through all nodes to add their information to the hosts files
  nodes.each do |nodes|
    # Generate the system's hosts file for use on all nodes.
    open('common_files/hosts.system', 'a') { |f|
      f.puts nodes['ip'] + ' ' + nodes['node']
    }

    if nodes.include? 'groups'
        nodes['groups'].each do |group|
          if groups[group].kind_of?(Array) == false
            groups[group] = []
          end

          groups[group].push(nodes['node'])
        end
    else
      orphanNodes.push(nodes['node'])
    end
  end

  # Append the hosts which don't belong to any group to the Ansible hosts file
  orphanNodes.each do |node|
    open('mgmt_files/hosts.ansible', 'a') { |f|
      f.puts node
    }
  end

  # Create the  Ansible hosts file for use on the mgmt node preceded by the group header.
  groups.each do |group|
    open('mgmt_files/hosts.ansible', 'a') { |f|
      f.puts ''
      f.puts '[' + group[0] + ']'

      group[1].each do |node|
          f.puts node
      end
    }
  end

  # Append the management node with it's mgmt group to the Ansible hosts file.
  open('mgmt_files/hosts.ansible', 'a') { |f|
    f.puts '[mgmt]'
    f.puts 'mgmt ansible_connection=local'
  }

  # Configure the common nodes
  nodes.each do |nodes|
    config.vm.define nodes['node'] do |nodeConfiguration|
      nodeConfiguration.vm.box = "ubuntu/trusty64"
      nodeConfiguration.vm.hostname = nodes['node']
      nodeConfiguration.vm.network :private_network, ip: nodes['ip']
      nodeConfiguration.vm.provider "virtualbox" do |vb|
        vb.memory = nodes['mem']
      end

      # Fixes "stdin: is not a tty" error.
      # https://github.com/mitchellh/vagrant/issues/1673#issuecomment-28817675
      # https://www.virtualbox.org/manual/ch09.html
      nodeConfiguration.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"

      nodeConfiguration.vm.provision :shell, path: "bootstrap-common.sh"
    end
  end

  # Configure the utility node (Ansible management node)
  config.vm.define :mgmt do |mgmt_config|
    mgmt_config.vm.box = "ubuntu/trusty64"
    mgmt_config.vm.hostname = "mgmt"
    mgmt_config.vm.network :private_network, ip: "192.168.10.100"
    mgmt_config.vm.provider "virtualbox" do |vb|
        vb.memory = "256"
    end

    # Fixes "stdin: is not a tty" error.
    # https://github.com/mitchellh/vagrant/issues/1673#issuecomment-28817675
    # https://www.virtualbox.org/manual/ch09.html
    mgmt_config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"

    mgmt_config.vm.provision :shell, path: "bootstrap-mgmt.sh"
  end
end
